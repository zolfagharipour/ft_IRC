LINKS FOR BRGINNING:

- First impression:
	https://reactive.so/post/42-a-comprehensive-guide-to-ft_irc/
	
- Socket explanation (boring slides, but actually not bad. also remember we should use TCP and that means no datagram socket):
	https://www.csd.uoc.gr/~hy556/material/tutorials/cs556-3rd-tutorial.pdf

- Step-by-step guide to the project(i think after studying the subject this is
the path we should take):
	https://medium.com/@afatir.ahmedfatir/small-irc-server-ft-irc-42-network-7cee848de6f9
	
- How IRC works with official links to RFC
	 http://chi.cs.uchicago.edu/chirc/irc.html
	 



LINKS FOR REFERENCE WHILE CODING:


- Beej's Guide to network programming (too long to read, but maybe we can check it while coding as reference):
	https://beej.us/guide/bgnet/pdf/bgnet_a4_c_1.pdf
	
- For commands and correct syntaxes (we dont need to read them all):
	https://modern.ircdocs.horse/










THINGS TO STUDY:


1. sockets;
	1.1 what non-blocking options exist;
	1.2 it seems epoll works for others, what is it and why not poll;
2. clients;
	2.1 what clients exist;
		these clients pops up in my research quite often: HexChat, irssi, WeeChat
	2.2 what client is on the 42 PCs;
	2.3 what client other chose;
3. alternatives to try & catch;
	3.1 what functions are throwing exceptions and if we can stop them from throwing;
	3.2 which throws are better to be allowed;
